<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>99999999</depth>
  <persistent>0</persistent>
  <parentName>par_parallax</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create parallax.

 // First, call the parent. We do this to receive all variables from it.
    event_inherited()
    
 // Create the parallax background:
    var bg_yoffset;
        bg_yoffset = 0.932; // Offset for the parallax bg.
        
 // Create the sky:
    parallax_add_node(1, pbg_emerald_hill_01, 0.96, 0, 0, 0, 0, bg_yoffset, 0, 0, 90, 0, 0, 0, 512, 112);
        
 // Create the mountains:
    parallax_add_node(1, pbg_emerald_hill_02, 0.91, 0, 0, 0, 0, bg_yoffset, 0, 0, 200, 0, 0, 0, 512, 32);    
    
 // Create the valley, we use a loop to split it in 16 pieces.
    for(i=0; i&lt;15; i+=1)
    {
        parallax_add_node(1, pbg_emerald_hill_03, 0.9-((1+i)/15)*0.9, 0, 0, 0, 0, bg_yoffset, 0, 0, 232+i*8, 0, 0, i*8, 512, 112);           
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Fill background color.

    draw_set_color(make_color_rgb(0, 0, 128))
    draw_rectangle(view_xview, view_yview, view_xview+view_wview, view_yview+view_hview, false);
    draw_set_color(c_white);
    
 // Afterwards, call the parent. In order to copy their draw event.
    event_inherited()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
